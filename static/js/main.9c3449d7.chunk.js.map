{"version":3,"sources":["components/functional_components/FriendSlot/FriendSlot.module.css","components/stateful_components/ChatInput/ChatInput.module.css","components/functional_components/FriendsList/FriendsList.module.css","components/stateful_components/ChatWindow/ChatWindow.module.css","components/functional_components/EmptyChat/EmptyChat.module.css","components/functional_components/NavBar/NavBar.module.css","../node_modules/n3/lib sync /^/.//N3.*$","../node_modules/encoding/lib sync","../node_modules/@trust/jose/node_modules/@trust/webcrypto/src/algorithms sync","../node_modules/@trust/webcrypto/src/algorithms sync","components/functional_components/FriendSlot/FriendSlot.js","components/functional_components/FriendsList/FriendsList.js","components/functional_components/Message/Message.js","components/functional_components/EmptyChat/EmptyChat.js","components/stateful_components/ChatWindow/ChatWindow.js","components/stateful_components/AddChat/AddChat.js","components/stateful_components/ChatInput/ChatInput.js","components/stateful_components/ChatPage/ChatPage.js","components/functional_components/NavBar/NavBar.js","components/functional_components/GreetPage/GreetPage.js","App.js","serviceWorker.js","index.js","components/functional_components/Message/Message.module.css","components/stateful_components/ChatPage/ChatPage.module.css"],"names":["module","exports","container","nameText","image","input","scrollDiv","text","title","map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","webpackEmptyContext","FriendSlot","props","friend","react_default","a","createElement","className","styles","index","webid","webId","style","backgroundImage","concat","picture","name","FriendsList","ListGroup_default","variant","friends","username","split","replace","Item","action","href","key","onClick","functional_components_FriendSlot_FriendSlot","Message","classNames","message","from","me","content","EmptyChat","emptyChatText","nomessages","Row_default","height","Col_default","sm","lg","md","marginTop","marginBottom","ChatWindow","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","undefined","messages","document","getElementById","console","log","scrollTop","scrollHeight","length","Tab_default","Content","overflowY","Pane","eventKey","functional_components_EmptyChat_EmptyChat","chatMarkup","functional_components_Message_Message","boxShadow","React","Component","AddChat","newChat","canAddFriend","_this2","xhr","XMLHttpRequest","url","target","value","onreadystatechange","readyState","DONE","status","setState","RegExp","test","open","send","alturl","margin","FormControl_default","placeholder","onChange","changeChatToAdd","bind","Button_default","disabled","ChatInput","rows","as","changeMessage","sendMessage","LDP","rdf","Namespace","RDF","FOAF","VCARD","ACL","MEET","DC","FLOW","SIOC","TERMS","ChatPage","contacts","chats","ownMessages","friendMessages","newContact","currentChat","window","location","store","graph","fetcher","Fetcher","inboxAddress","load","then","inboxFiles","each","sym","chatChecks","forEach","inboxFile","typeStore","typeFetcher","push","any","inboxFileValues","contactWebId","Promise","all","results","fetchContacts","checkForMessages","currentChatName","currentChatWebId","includes","fetchMessages","_this3","permissionStore","permissionFetcher","viewerNode","friendName","friendPicture","friendAccess","statementsMatching","access","friendsWebId","_this4","userInboxAddress","friendsName","friendsInboxAddress","messagePromises","response","userInbox","messageContent","messageTimestamp","altMessageTimestamp","created","catch","err","sortMessages","_this5","timestamp","Date","updater","UpdateManager","user","newMessage","Math","floor","random","ins","st","doc","lit","update","uri","ok","alert","_this6","getAttribute","newAclFile","ownerNode","newChatTriples","put","newACLTriples","fetchChats","socket","WebSocket","onopen","onmessage","msg","data","slice","userWebId","_this7","chat","chatName","listenForMessage","_this8","auth","trackSession","session","fetchUser","sort","b","Container","defaultActiveKey","stateful_components_AddChat_AddChat","addChat","functional_components_FriendsList_FriendsList","borderLeft","stateful_components_ChatWindow_ChatWindow","fetchMessage","stateful_components_ChatInput_ChatInput","NavBar","Navbar_default","bg","fixed","Brand","marginLeft","marginRight","index_es","GreetPage","App","currentSession","login","webID","logout","functional_components_NavBar_NavBar","react_router_dom","react_router","path","render","stateful_components_ChatPage_ChatPage","functional_components_GreetPage_GreetPage","Boolean","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c3449d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendSlot_container__223BG\",\"nameText\":\"FriendSlot_nameText__2Yyyb\",\"image\":\"FriendSlot_image__1NcFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChatInput_container__32lBX\",\"input\":\"ChatInput_input__Pam09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollDiv\":\"FriendsList_scrollDiv__2Fw1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollDiv\":\"ChatWindow_scrollDiv__o2kPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"EmptyChat_text__1vCl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"NavBar_title__2Fh_s\"};","var map = {\n\t\"./N3Lexer\": 105,\n\t\"./N3Lexer.js\": 105,\n\t\"./N3Parser\": 106,\n\t\"./N3Parser.js\": 106,\n\t\"./N3Store\": 152,\n\t\"./N3Store.js\": 152,\n\t\"./N3StreamParser\": 153,\n\t\"./N3StreamParser.js\": 153,\n\t\"./N3StreamWriter\": 160,\n\t\"./N3StreamWriter.js\": 160,\n\t\"./N3Util\": 107,\n\t\"./N3Util.js\": 107,\n\t\"./N3Writer\": 109,\n\t\"./N3Writer.js\": 109\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 277;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 351;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 461;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 488;","import React from \"react\";\nimport styles from './FriendSlot.module.css';\n\nconst FriendSlot = props => {\n  const friend = props.friend;\n  return (\n    <div\n      className={styles.container}\n      index={props.index}\n      webid={friend.webId}\n    >\n      <div \n        className={styles.image}\n        style={{backgroundImage:`url(${friend.picture})`}}\n      />\n      <strong \n        className={styles.nameText}\n        index={props.index}\n        webid={friend.webId}\n      >\n      {friend.name}\n      </strong>\n    </div>\n  );\n};\n\nexport default FriendSlot;\n","import React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport FriendSlot from \"../FriendSlot/FriendSlot\";\nimport styles from './FriendsList.module.css';\nconst FriendsList = props => {\n  return (\n    <ListGroup variant=\"flush\" className={styles.scrollDiv}>\n      {props.friends.map((friend, index) => {\n        const username = friend.webId.split(\".\")[0].replace(\"https://\", \"\");\n        return (\n          <ListGroup.Item action href={\"#\" + username} key={index} onClick={() => props.onClick(friend.webId)}>\n            <FriendSlot friend={friend} index={index}/>\n          </ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nexport default FriendsList;\n","import React from \"react\";\nimport styles from './Message.module.css';\nimport classNames from 'classnames';\n\nconst Message = (props) => {\n  return (\n    <div className={styles.container}>\n      <div className={classNames(styles.message, props.from === \"me\" ? styles.me : styles.friend)}>\n        {props.message.content}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport styles from \"./EmptyChat.module.css\";\n\nconst EmptyChat = props => {\n  let emptyChatText = \"\";\n  if (props.nomessages) {\n    emptyChatText = \"You have no chat history with this person...\";\n  } else {\n    emptyChatText = \"Select a friend to start chatting\";\n  }\n  return (\n    <Row style={{height: \"100%\"}}>\n      <Col sm lg />\n      <Col sm=\"6\" md=\"6\" lg=\"6\" style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\n        <h1 className={styles.text}>{emptyChatText}</h1>\n      </Col>\n      <Col sm lg />\n    </Row>\n  );\n};\n\nexport default EmptyChat;\n","import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Message from \"../../functional_components/Message/Message\";\nimport styles from './ChatWindow.module.css';\nimport EmptyChat from \"../../functional_components/EmptyChat/EmptyChat\";\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined,\n      friends: this.props.friends,\n      messages: this.props.messages\n    };\n  }\n\n  componentDidUpdate(){\n    var scrollDiv = document.getElementById(\"scrollDiv\");\n    if(scrollDiv){\n      console.log(\"scroll baby scroll\")\n      scrollDiv.scrollTop = scrollDiv.scrollHeight\n    }\n\n  }\n\n  render() {\n    console.log(this.props.messages)\n    if (this.props.messages.length <= 0) {\n      return (\n        <Tab.Content style={{ height: \"84%\", overflowY: \"scroll\" }}>\n          {this.props.friends.map((friend, index) => {\n            const username = friend.webId.split(\".\")[0].replace(\"https://\", \"\");\n            return (\n              <Tab.Pane eventKey={\"#\" + username} key={index} style={{height: \"100%\"}}>\n                <EmptyChat nomessages/>\n              </Tab.Pane>\n            );\n          })}\n        </Tab.Content>\n      );\n    }\n\n    const chatMarkup = this.props.messages.map((message) => {\n        return <Message message={message.message} from={message.from}/>;\n    })\n\n    return (\n      <Tab.Content className={styles.scrollDiv} id=\"scrollDiv\" style={{ height: \"calc(100% - 120px)\", overflowY: \"auto\", boxShadow:\"4px 2px 4px rgba(0, 0, 0, 0.5)\"}}>\n        {this.props.friends.map((friend, index) => {\n          const username = friend.webId.split(\".\")[0].replace(\"https://\", \"\");\n          return (\n            <Tab.Pane eventKey={\"#\" + username} key={index}>\n              {chatMarkup}\n            </Tab.Pane>\n          );\n        })}\n      </Tab.Content>\n    );\n  }\n}\n\nexport default ChatWindow;\n","import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nclass AddChat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newChat: \"\",\n      canAddFriend: false\n    };\n  }\n\n  changeChatToAdd(e) {\n    var xhr = new XMLHttpRequest();\n    const url = e.target.value;\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200 && this.state.canAddFriend === false) {\n          this.setState({\n            newChat: url,\n            canAddFriend: true\n          });\n        } else {\n          this.setState({\n            canAddFriend: false\n          });\n        }\n      }\n    };\n    const urlRegExp = new RegExp(/(\\w+(:\\/\\/){1})(\\w+\\.)(\\w+\\.)(\\w+\\/)+/g);\n    if (urlRegExp.test(e.target.value)) {\n      xhr.open(\"GET\", url);\n      xhr.send();\n    }\n\n    var format = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n    if (format.test(e.target.value) === false){\n      const alturl = \"https://\" + e.target.value + \".solid.community/profile/card#me\";\n      xhr.open(\"GET\", alturl);\n      xhr.send();\n    }\n  }\n\n  render() {\n    return (\n      <Row style={{ margin: \"5%\" }}>\n        <Col lg=\"8\">\n          <FormControl\n            placeholder=\"Add a new chat:\"\n            onChange={this.changeChatToAdd.bind(this)}\n          />\n        </Col>\n        <Col lg=\"2\">\n        {this.state.canAddFriend ? <Button onClick={this.props.onClick} webId={this.state.newChat}>+</Button> : <Button disabled>+</Button>}\n        </Col>\n        <Col lg />\n      </Row>\n    );\n  }\n}\n\nexport default AddChat;\n","import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from './ChatInput.module.css';\n\nclass ChatInput extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            message: \"\"\n        }\n    }\n\n    changeMessage(e){\n        this.setState({\n            message: e.target.value\n        })\n        console.log(this.state)\n    }\n\n    sendMessage(){\n      this.props.onClick(this.state.message);\n      this.setState({\n        message:\"\"\n      })\n    }\n\n    render(){\n        return (\n          <Row className={styles.container}>\n            <Col lg=\"9\">\n              <FormControl\n                className={styles.input}\n                placeholder=\"Enter your message\"\n                rows=\"2\"\n                as=\"textarea\"\n                value={this.state.message}\n                onChange={this.changeMessage.bind(this)}\n              />\n            </Col>\n            <Col lg=\"3\">\n              {this.state.message !== \"\" ? (\n                <Button onClick={this.sendMessage.bind(this)} message={this.state.message}>\n                  Send\n                </Button>\n              ) : (\n                <Button disabled>Send</Button>\n              )}\n            </Col>\n          </Row>\n        );\n    }\n};\n\nexport default ChatInput;\n","import React from \"react\";\nimport auth from \"solid-auth-client\";\nimport rdf from \"rdflib\";\nimport FriendsList from \"../../functional_components/FriendsList\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport classNames from \"classnames\";\nimport ChatWindow from \"../ChatWindow/ChatWindow\";\nimport AddChat from \"../AddChat/AddChat\";\nimport ChatInput from \"../ChatInput/ChatInput\";\nimport EmptyChat from \"../../functional_components/EmptyChat/EmptyChat\";\nimport styles from \"./ChatPage.module.css\";\n\nconst LDP = new rdf.Namespace(\"http://www.w3.org/ns/ldp#\");\nconst RDF = new rdf.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n//const ACT = new rdf.Namespace(\"https://www.w3.org/ns/activitystreams#\");\nconst FOAF = new rdf.Namespace(\"http://xmlns.com/foaf/0.1/\");\nconst VCARD = new rdf.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\nconst ACL = new rdf.Namespace(\"http://www.w3.org/ns/auth/acl#\");\nconst MEET = new rdf.Namespace(\"http://www.w3.org/ns/pim/meeting#\");\nconst DC = new rdf.Namespace(\"http://purl.org/dc/elements/1.1/\");\nconst FLOW = new rdf.Namespace(\"http://www.w3.org/2005/01/wf/flow#\");\nconst SIOC = new rdf.Namespace(\"http://rdfs.org/sioc/ns#\");\nconst TERMS = new rdf.Namespace(\"http://purl.org/dc/terms/\");\n\nclass ChatPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined,\n      contacts: [],\n      chats: [],\n      ownMessages: undefined,\n      friendMessages: undefined,\n      messages: undefined,\n      newContact: undefined,\n      currentChat: window.location.href.split(\"#\").length > 1 ? \"#\" + window.location.href.split(\"#\")[1] : undefined\n    };\n  }\n\n  fetchChats() {\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    const webId = this.state.webId;\n    const inboxAddress = webId.replace(\"profile/card#me\", \"inbox/\");\n\n    fetcher.load(inboxAddress).then(() => {\n      const inboxFiles = store.each(rdf.sym(inboxAddress), LDP(\"contains\"));\n      const chats = [];\n      const chatChecks = [];\n      inboxFiles.forEach(inboxFile => {\n        const typeStore = rdf.graph();\n        const typeFetcher = new rdf.Fetcher(typeStore);\n        chatChecks.push(\n          typeFetcher.load(inboxFile.value).then(() => {\n            const chatBool = typeStore.any(null, RDF(\"type\"), MEET(\"Chat\"));\n            if (chatBool) {\n              const inboxFileValues = inboxFile.value.split(\"/\");\n              const contactName = inboxFileValues[inboxFileValues.length - 1];\n              const contactWebId =\n                \"https://\" + contactName + \".solid.community/profile/card#me\";\n              console.log(contactWebId);\n              chats.push(contactWebId);\n            }\n          })\n        );\n      });\n      Promise.all(chatChecks).then(results => {\n        this.setState({\n          chats: chats\n        });\n        this.fetchContacts();\n        this.checkForMessages(chats);\n\n        const currentChatName = window.location.href.split(\"#\")[1];\n        if (currentChatName) {\n          const currentChatWebId = \"https://\" + currentChatName + \".solid.community/profile/card#me\";\n          if(chats.includes(currentChatWebId)){\n            this.fetchMessages(currentChatWebId);\n          }\n        }\n      });\n    });\n  }\n\n  fetchContacts() {\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    const webId = this.state.webId;\n    //const inboxAddress = webId.replace(\"profile/card#me\", \"inbox/\");\n\n    const permissionStore = rdf.graph();\n    const permissionFetcher = new rdf.Fetcher(permissionStore);\n\n    let viewerNode = webId.replace(\"card#me\", \"card.acl#viewer\");\n    permissionFetcher.load(viewerNode);\n\n    const friends = this.state.chats.map(friend => {\n      return fetcher.load(friend).then(() => {\n        console.log(\"Fetched \" + friend + \"'s Profile\");\n        const friendName = store.any(rdf.sym(friend), FOAF(\"name\"));\n\n        var friendPicture = store.any(rdf.sym(friend), VCARD(\"hasPhoto\"));\n        friendPicture = friendPicture ? friendPicture.value : \"\";\n\n        const friendAccess =\n          permissionStore.statementsMatching(\n            viewerNode,\n            ACL(\"agent\"),\n            rdf.sym(friend)\n          ).length > 0\n            ? true\n            : false;\n        //console.log(friend.value, friendAccess)\n        return {\n          name: friendName.value,\n          webId: friend,\n          access: friendAccess,\n          picture: friendPicture\n        };\n      });\n    });\n    Promise.all(friends).then(results => {\n      this.setState({ contacts: results });\n    });\n  }\n\n  fetchMessages(friendsWebId) {\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    const username = this.state.webId.split(\".\")[0].replace(\"https://\", \"\");\n    const userInboxAddress = this.state.webId.replace(\n      \"profile/card#me\",\n      \"inbox/\"\n    );\n\n    const friendsName = friendsWebId.split(\".\")[0].replace(\"https://\", \"\");\n    const friendsInboxAddress = friendsWebId.replace(\n      \"profile/card#me\",\n      \"inbox/\" + username\n    );\n\n    const messagePromises = [\n      fetcher\n        .load(userInboxAddress + friendsName)\n        .then(response => {\n          const userInbox = rdf.sym(userInboxAddress + friendsName);\n          const ownMessages = store\n            .each(userInbox, FLOW(\"message\"))\n            .map(message => {\n              message = rdf.sym(message);\n              const messageContent = store.any(message, SIOC(\"content\"));\n              const messageTimestamp = store.any(message, DC(\"created\"));\n              const altMessageTimestamp = messageTimestamp\n                ? \"\"\n                : store.any(message, TERMS(\"created\"));\n              const messageContentValue = messageContent.value;\n              const messageTimestampValue = messageTimestamp\n                ? messageTimestamp.value\n                : altMessageTimestamp.value;\n              return {\n                content: messageContentValue,\n                created: messageTimestampValue\n              };\n            });\n          console.log(ownMessages);\n          return ownMessages;\n        })\n        .catch(err => {\n          console.log(\"You haven't send any messages yet!\");\n        })\n    ];\n\n    messagePromises.push(\n      fetcher\n        .load(friendsInboxAddress)\n        .then(response => {\n          const friendMessages = store\n            .each(rdf.sym(friendsInboxAddress), FLOW(\"message\"))\n            .map(message => {\n              message = rdf.sym(message.value);\n              const messageContent = store.any(message, SIOC(\"content\"));\n              const messageTimestamp = store.any(message, DC(\"created\"));\n              const altMessageTimestamp = messageTimestamp\n                ? \"\"\n                : store.any(message, TERMS(\"created\"));\n              const messageContentValue = messageContent.value;\n              const messageTimestampValue = messageTimestamp\n                ? messageTimestamp.value\n                : altMessageTimestamp.value;\n              return {\n                content: messageContentValue,\n                created: messageTimestampValue\n              };\n            });\n          return friendMessages;\n        })\n        .catch(err => {\n          console.log(\"This friend has no chat with you yet.\");\n        })\n    );\n\n    console.log(messagePromises);\n    Promise.all(messagePromises).then(results => {\n      console.log(results);\n      const messages = this.sortMessages(results[0], results[1]);\n      this.setState({ messages: messages });\n    });\n\n    console.log(this.state.messages);\n  }\n\n  sendMessage(message) {\n    const timestamp = new Date();\n    \n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n    const updater = new rdf.UpdateManager(store);\n\n    //const username = this.state.webId.split(\".\")[0].replace(\"https://\", \"\");\n    const userInboxAddress = this.state.webId.replace(\n      \"profile/card#me\",\n      \"inbox/\"\n    );\n\n    const friendsName = window.location.href.split(\"#\")[1];\n    //const friendsWebId = this.state.webId.replace(username, friendsName);\n\n    fetcher\n      .load(userInboxAddress + friendsName)\n      .then(response => {\n        const newChat = rdf.sym(userInboxAddress + friendsName);\n        const user = rdf.sym(this.state.webId);\n        const newMessage = new rdf.sym(\n          userInboxAddress +\n            friendsName +\n            \"#Msg\" +\n            Math.floor(Math.random() * 1231231241)\n        );\n\n        let del = [];\n        let ins = [\n          rdf.st(newChat, FLOW(\"message\"), newMessage, newChat.doc()),\n          rdf.st(newMessage, DC(\"created\"), timestamp, newChat.doc()),\n          rdf.st(newMessage, FOAF(\"maker\"), user, newChat.doc()),\n          rdf.st(newMessage, SIOC(\"content\"), rdf.lit(message), newChat.doc())\n        ];\n\n        updater.update(del, ins, (uri, ok, message) => {\n          if (ok) {\n            console.log(\"Message sent!\");\n            const friendsWebId = \"https://\" + friendsName + \".solid.community/profile/card#me\"\n            this.fetchMessages(friendsWebId);\n          } else alert(message);\n        });\n      })\n      .catch(err => {\n        console.log(\n          \"Could not find inbox... Maybe try to re-add this friend to your chat\"\n        );\n      });\n  }\n\n  addChat(e) {\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n    const updater = new rdf.UpdateManager(store);\n\n    const username = this.state.webId.split(\".\")[0].replace(\"https://\", \"\");\n    const userInboxAddress = this.state.webId.replace(\n      \"profile/card#me\",\n      \"inbox/\"\n    );\n\n    const friendsName = e.target\n      .getAttribute(\"webId\")\n      .split(\".\")[0]\n      .replace(\"https://\", \"\");\n    const friendsWebId = this.state.webId.replace(username, friendsName);\n\n    fetcher.load(userInboxAddress + friendsName).catch(err => {\n      const newChat = rdf.sym(userInboxAddress + friendsName);\n      const user = rdf.sym(this.state.webId);\n      const friend = rdf.sym(friendsWebId);\n      const newAclFile = rdf.sym(userInboxAddress + friendsName + \".acl\").doc();\n      const viewerNode = rdf.sym(\n        userInboxAddress + friendsName + \".acl#viewer\"\n      );\n      const ownerNode = rdf.sym(userInboxAddress + friendsName + \".acl#owner\");\n\n      //Create new chat file\n      const newChatTriples = [\n        rdf.st(newChat, RDF(\"type\"), MEET(\"Chat\"), newChat.doc()),\n        rdf.st(newChat, DC(\"title\"), rdf.lit(\"Chat\", \"en\"), newChat.doc()),\n        rdf.st(newChat, DC(\"created\"), new Date(), newChat.doc())\n      ];\n\n      updater.put(newChat, newChatTriples, \"text/turtle\", function(\n        uri,\n        ok,\n        message\n      ) {\n        if (ok)\n          console.log(\"Created new chatfile for chat data with \" + friendsName);\n        else alert(message);\n      });\n\n      //Create new ACL File too\n\n      const newACLTriples = [\n        rdf.st(ownerNode, ACL(\"agent\"), user, newAclFile),\n        rdf.st(ownerNode, ACL(\"accessTo\"), newChat, newAclFile),\n        rdf.st(ownerNode, ACL(\"mode\"), ACL(\"Control\"), newAclFile),\n        rdf.st(ownerNode, ACL(\"mode\"), ACL(\"Read\"), newAclFile),\n        rdf.st(ownerNode, ACL(\"mode\"), ACL(\"Write\"), newAclFile),\n        rdf.st(viewerNode, ACL(\"agent\"), friend, newAclFile),\n        rdf.st(viewerNode, ACL(\"accessTo\"), newChat, newAclFile),\n        rdf.st(viewerNode, ACL(\"mode\"), ACL(\"Read\"), newAclFile)\n      ];\n\n      updater.put(newAclFile, newACLTriples, \"text/turtle\", function(\n        uri,\n        ok,\n        message\n      ) {\n        if (ok) {\n          console.log(\"New ACL File has been created\");\n        } else {\n          console.log(message);\n        }\n      });\n      this.fetchChats();\n    });\n  }\n\n  listenForMessage(inboxAddress, username) {\n    var socket = new WebSocket(inboxAddress.replace(\"https\", \"wss\").replace(\"/inbox/\" + username, \"\"));\n      socket.onopen = function() {\n        this.send(\"sub \" + inboxAddress);\n        console.log(\"sub to chat-socket\");\n      };\n      socket.onmessage = function(msg) {\n        console.log(msg);\n        if (msg.data && msg.data.slice(0, 3) === \"pub\") {\n          const username = inboxAddress.split(\".\")[0].replace(\"https://\", \"\");\n          const userWebId =\n            \"https://\" + username + \".solid.community/profile/card#me\";\n          const currentChatName = window.location.href.split(\"#\") ? window.location.href.split(\"#\")[1] : undefined;\n          if (currentChatName === username){\n            this.fetchMessages(userWebId);\n          }\n        }\n      }.bind(this);\n  }\n\n  checkForMessages(chats) {\n    console.log(chats);\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    const username = this.state.webId.split(\".\")[0].replace(\"https://\", \"\");\n    const userInboxAddress = this.state.webId.replace(\n      \"profile/card#me\",\n      \"inbox/\"\n    );\n\n    const inboxAddressess = chats\n      ? chats.map(chat => {\n          const chatName = chat.split(\".\")[0].replace(\"https://\", \"\");\n          const inboxAddress =\n            userInboxAddress.replace(username, chatName) + username;\n          return inboxAddress;\n        })\n      : undefined;\n\n    inboxAddressess.forEach(inboxAddress => {\n      this.listenForMessage(inboxAddress, username)\n    });\n  }\n\n  fetchUser() {\n    auth.trackSession(session => {\n      if (session) {\n        console.log(\"You are logged in... Fetching your data now\");\n        this.setState({\n          webId: session.webId\n        }, () => {console.log(\"feeeeeeeeeeeeeeeeeeeeeeeeeeeeeetch\"); this.fetchChats()});\n        \n        // setInterval(() => {\n        //   this.fetchChats();\n        // }, 5000)\n        //this.fetchMessages();\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  sortMessages(ownMessages, friendMessages) {\n    if (ownMessages !== undefined || friendMessages !== undefined) {\n      const messages = [];\n      for (var message in ownMessages) {\n        messages.push({ message: ownMessages[message], from: \"me\" });\n        //console.log(new Date(ownMessages[message].created))\n      }\n\n      for (message in friendMessages) {\n        messages.push({ message: friendMessages[message], from: \"friend\" });\n      }\n\n      messages.sort(function(a, b) {\n        return new Date(a.message.created) - new Date(b.message.created);\n      });\n\n      return messages;\n    } else {\n      return undefined;\n    }\n  }\n\n  render() {\n    const messages = this.state.messages;\n    console.log(this.state)\n    return (\n      <Row className={styles.container}>\n        <Tab.Container defaultActiveKey={this.state.currentChat} >\n          <Col lg=\"4\">\n            <AddChat onClick={this.addChat.bind(this)} />\n            <FriendsList\n              onClick={this.fetchMessages.bind(this)}\n              friends={this.state.contacts}\n            />\n          </Col>\n          <Col\n            lg=\"8\"\n            className={classNames(styles.container, styles.borderLeft)}\n          >\n            {this.state.messages ? (\n              <div className={styles.container}>\n                <ChatWindow webId={this.state.webId}fetchMessage={this.fetchMessages.bind(this)} friends={this.state.contacts} messages={messages} />\n                <ChatInput onClick={this.sendMessage.bind(this)} />\n              </div>\n            ) : (\n              <EmptyChat />\n            )}\n          </Col>\n        </Tab.Container>\n      </Row>\n    );\n  }\n}\n\nexport default ChatPage;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Button } from \"yoda-design-system\";\nimport styles from \"./NavBar.module.css\";\n\nconst NavBar = props => {\n  return (\n    <div >\n      <Navbar style={{height: \"90px\"}} bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Navbar.Brand style={{marginLeft: \"auto\", marginRight: \"auto\"}} className={styles.title}>OWNCHAT<p>by SOIL PROTOCOL</p></Navbar.Brand>\n        {/* <Nav>\n        <NavLink to=\"/\">Chat</NavLink>\n      </Nav> */}\n        <Button onClick={props.onClick}>{props.webId ? \"Logout\" : \"Login\"}</Button>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Button } from \"yoda-design-system\";\n\nconst GreetPage = (props) => {\n  return (\n    <Row>\n      <Col lg />\n      <Col lg=\"6\">\n        <h1 style={{margin: \"10%\"}}>You are not logged in! To take ownership of your messages and contacts, please register or login.</h1>\n        <Button onClick={props.onClick} style={{margin: \"10%\"}}>Login</Button>\n      </Col>\n      <Col lg />\n    </Row>\n  );\n};\n\nexport default GreetPage;\n","import React from \"react\";\nimport auth from \"solid-auth-client\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ChatPage from \"./components/stateful_components/ChatPage\";\nimport NavBar from \"./components/functional_components/NavBar\";\nimport GreetPage from \"./components/functional_components/GreetPage/GreetPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined\n    };\n  }\n\n  async login() {\n    const session = await auth.currentSession();\n    if (!session) {\n      await auth.login(\"https://solid.community\");\n    } else {\n      this.setState({\n        webId: session.webID\n      });\n    }\n  }\n\n  logout() {\n    auth.logout().then(() => {\n      this.setState({\n        webId: undefined\n      });\n    });\n  }\n\n  componentDidMount() {\n    auth.trackSession(session => {\n      if (!session) {\n        console.log(\"You are logged out...\");\n      } else {\n        console.log(\"You are logged in... Fetching your data now\");\n        this.setState({\n          webId: session.webId\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(\"Rerendered\")\n    return (\n      <div style={{ height: \"100%\" }}>\n        <NavBar\n          onClick={\n            this.state.webId ? this.logout.bind(this) : this.login.bind(this)\n          }\n          webId={this.state.webId}\n        />\n        <BrowserRouter>\n            <Switch>\n              <div style={{ height: \"100%\", marginTop:90 }}>\n                <Route path=\"/\" render={() => this.state.webId ? <ChatPage /> : <GreetPage onClick={this.login.bind(this)}/>} />\n              </div>\n            </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__3Q20i\",\"message\":\"Message_message__2O8iJ\",\"me\":\"Message_me__2_Kpp\",\"friend\":\"Message_friend__g5x95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChatPage_container__3yPG0\",\"borderLeft\":\"ChatPage_borderLeft__13V-C\"};"],"sourceRoot":""}